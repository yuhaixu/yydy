<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.freesheep.biz.dao.StMomentsBOMapper">
  <resultMap id="BaseResultMap" type="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="dig" jdbcType="INTEGER" property="dig" />
    <result column="dis" jdbcType="INTEGER" property="dis" />
    <result column="share_count" jdbcType="BIGINT" property="shareCount" />
    <result column="mtype" jdbcType="BIT" property="mtype" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />

    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avator" jdbcType="VARCHAR" property="avator" />
    <result column="gender" jdbcType="BIT" property="gender" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="location" jdbcType="LONGVARCHAR" property="location" />
  </resultMap>


  <resultMap extends="ResultMapWithBLOBs" id="ResultMapSheepCircle" type="com.freesheep.biz.model.StMomentsBO">

    <result column="moment_nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="moment_avator" jdbcType="VARCHAR" property="avator" />
    <result column="moment_gender" jdbcType="BIT" property="gender" />

    <collection property="momentList" ofType="com.freesheep.biz.model.StMomentsDissBO">
      <id column="diss_id" jdbcType="INTEGER" property="id" />
      <result column="fid" jdbcType="INTEGER" property="fid" />
      <result column="dis_user_id" jdbcType="INTEGER" property="userId" />
      <result column="dis_content" jdbcType="LONGVARCHAR" property="content" />
      <result column="mid" jdbcType="INTEGER" property="mid" />

      <result column="to_user_nickname" jdbcType="VARCHAR" property="toUserNickname" />
      <result column="to_user_avator" jdbcType="VARCHAR" property="toUserAvator" />
      <result column="to_user_gender" jdbcType="BIT" property="toUserGender" />
      <result column="from_user_nickname" jdbcType="VARCHAR" property="fromUserNickname" />
      <result column="from_user_avator" jdbcType="VARCHAR" property="fromUserAvator" />
      <result column="from_user_gender" jdbcType="BIT" property="fromUserGender" />
    </collection>

    <collection property="digs" ofType="com.freesheep.biz.model.StMomentsDigsBO">
      <result column="digs_user_id" jdbcType="INTEGER" property="userId" />
      <result column="digs_nickname" jdbcType="VARCHAR" property="nickname" />
    </collection>

    <collection property="media" ofType="com.freesheep.biz.model.StMomentsMediaBO">
      <result column="media_url" jdbcType="VARCHAR" property="url" />
    </collection>


  </resultMap>


  <select id="selectMomentsForHome" resultMap="ResultMapSheepCircle">
    SELECT
    moment.id, moment.user_id, moment.dig, moment.dis, moment.share_count, moment.content, moment.location, moment.created, media.url media_url,
    users.nickname moment_nickname, users.avator moment_avator, users.gender moment_gender
    FROM (st_moments moment)
    LEFT JOIN st_moments_media media ON media.mid = moment.id
    LEFT JOIN st_users users ON moment.user_id = users.id
    WHERE moment.id IN
    <foreach collection="midList" item="midList" separator="," open="(" close=")" index="">
      #{midList}
    </foreach>
    ORDER BY id DESC
  </select>


  <select id="selectMomentsDisList" resultMap="ResultMapSheepCircle">
    SELECT
    diss.mid as id, diss.id as diss_id, diss.mid, diss.fid, diss.user_id as dis_user_id, diss.content as dis_content,from_user.from_user_nickname, from_user.from_user_avator,
    from_user.from_user_gender,
    to_user_r.to_user_nickname, to_user_r.to_user_avator, to_user_r.to_user_gender
    FROM
    (st_moments_diss as diss)
    left join
    (select fu.id as from_user_id, fu.nickname as from_user_nickname, fu.avator as from_user_avator, fu.gender as from_user_gender
    from st_users as fu) as from_user on from_user.from_user_id = diss.user_id
    left join
    (select tu.id as to_user_id, tu.nickname as to_user_nickname, tu.avator as to_user_avator, tu.gender as to_user_gender
    from st_users as tu) as to_user_r on to_user_r.to_user_id = diss.fid
    WHERE diss.mid = #{id}
    limit 0,10
  </select>

  <select id="selectMomentsDigList" resultMap="ResultMapSheepCircle">
    SELECT
    digs.mid as id, digs.user_id as digs_user_id, digs_u.nickname as digs_nickname
    FROM (st_moments_digs digs)
    LEFT JOIN st_users digs_u on digs.user_id = digs_u.id
    WHERE digs.mid = #{id}
    limit 0,10
  </select>


  <select id="selectMomentsMediaList" resultMap="ResultMapSheepCircle">
    SELECT medias.url as media_url, medias.mid as id
    FROM st_moments_media medias
    WHERE medias.mid IN
    <foreach collection="midList" item="midList" separator="," open="(" close=")" index="">
      #{midList}
    </foreach>
    ORDER BY id DESC
  </select>


  <select id="selectMomentsIdList" parameterType="Map" resultMap="ResultMapSheepCircle">
    SELECT
    moment.id, moment.user_id, moment.dig, moment.dis, moment.share_count, moment.mtype, moment.created, moment.content,moment.location,
    users.nickname as moment_nickname, users.gender as moment_gender, users.avator as moment_avator
    FROM st_moments moment
    LEFT JOIN st_users users ON moment.user_id= users.id
    ORDER BY moment.id DESC
    limit #{offset},#{limit}
  </select>

  <select id="selectMomentsIdList_count" parameterType="Map" resultType="java.lang.Long">
    SELECT
    COUNT(1)
    from st_moments moment
  </select>



  <select id="selectMomentsIdListById" parameterType="Map" resultMap="ResultMapSheepCircle">
    SELECT
    moment.id, moment.user_id, moment.dig, moment.dis, moment.share_count, moment.mtype, moment.created, moment.content,moment.location,
    users.nickname as moment_nickname, users.gender as moment_gender, users.avator as moment_avator
    FROM st_moments moment
    LEFT JOIN st_users users ON moment.user_id= users.id
    WHERE moment.user_id = #{id}
    ORDER BY moment.id DESC
    limit #{offset},#{limit}
  </select>

  <select id="selectMomentsIdListById_count" parameterType="Map" resultType="java.lang.Long">
    SELECT
    COUNT(1)
    from st_moments moment
    WHERE moment.user_id = #{id}
  </select>



  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, dig, dis, share_count, mtype, created, modified
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content, location
  </sql>


  <update id="updateCommentCountById" parameterType="com.freesheep.biz.model.StMomentsBO">
    update st_moments
    set
    dis = #{dis,jdbcType=INTEGER},
    modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <update id="updateShareCountById" parameterType="com.freesheep.biz.model.StMomentsBO">
    update st_moments
    <set>
      <if test="shareCount != null">
        share_count = #{shareCount,jdbcType=BIGINT},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectOneDataById" parameterType="Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from st_moments
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectMomentsDataById" parameterType="Map" resultMap="ResultMapWithBLOBs">
    SELECT
    moments.id, moments.user_id, moments.content, moments.dig, moments.dis, moments.share_count, moments.mtype, moments.created,moments.location, users.nickname, users.avator, users.gender
    FROM st_moments moments
    left join st_users users on moments.user_id = users.id
    where moments.id = #{id,jdbcType=INTEGER}
  </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from st_moments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from st_moments
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into st_moments (id, user_id, dig, 
      dis, share_count, mtype, 
      created, modified, content, location
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{dig,jdbcType=INTEGER}, 
      #{dis,jdbcType=INTEGER}, #{shareCount,jdbcType=BIGINT}, #{mtype,jdbcType=BIT}, 
      #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, #{location,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into st_moments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="dig != null">
        dig,
      </if>
      <if test="dis != null">
        dis,
      </if>
      <if test="shareCount != null">
        share_count,
      </if>
      <if test="mtype != null">
        mtype,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="location != null">
        location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="dig != null">
        #{dig,jdbcType=INTEGER},
      </if>
      <if test="dis != null">
        #{dis,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        #{shareCount,jdbcType=BIGINT},
      </if>
      <if test="mtype != null">
        #{mtype,jdbcType=BIT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update st_moments
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="dig != null">
        dig = #{dig,jdbcType=INTEGER},
      </if>
      <if test="dis != null">
        dis = #{dis,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        share_count = #{shareCount,jdbcType=BIGINT},
      </if>
      <if test="mtype != null">
        mtype = #{mtype,jdbcType=BIT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update st_moments
    set user_id = #{userId,jdbcType=INTEGER},
      dig = #{dig,jdbcType=INTEGER},
      dis = #{dis,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=BIGINT},
      mtype = #{mtype,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR},
    location = #{location,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.freesheep.biz.model.StMomentsBO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update st_moments
    set user_id = #{userId,jdbcType=INTEGER},
      dig = #{dig,jdbcType=INTEGER},
      dis = #{dis,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=BIGINT},
      mtype = #{mtype,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>